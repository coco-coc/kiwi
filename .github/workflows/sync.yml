name: Sync Release APKs by Year

on:
  schedule:
    - cron: '0 4 * * *'   # 每天 UTC 4 点自动运行
  workflow_dispatch:       # 支持手动触发

jobs:
  download-apks:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ 检出你的仓库
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ 安装依赖
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      # 3️⃣ 下载 Release APK（按年份）
      - name: Download release APKs by year
        run: |
          mkdir -p releases
          TOTAL=0

          # 获取所有 Releases
          RELEASES=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/kiwibrowser/src.next/releases?per_page=100")

          # 获取所有年份列表，从最新到最旧
          YEARS=$(echo "$RELEASES" | jq -r '.[].published_at[:4]' | sort -u -r)

          for YEAR in $YEARS; do
            echo "=== 下载年份 $YEAR 的 Release ==="
            
            # 筛选该年份的 Release
            echo "$RELEASES" | jq -c ".[] | select(.published_at[:4]==\"$YEAR\")" | while read release; do
              TAG=$(echo "$release" | jq -r '.tag_name')
              YEAR_DIR="releases/$YEAR/$TAG"
              mkdir -p "$YEAR_DIR"
              
              # 下载 APK 文件
              ASSETS=$(echo "$release" | jq -c '.assets[]')
              echo "$ASSETS" | while read asset; do
                NAME=$(echo "$asset" | jq -r '.name')
                URL=$(echo "$asset" | jq -r '.browser_download_url')
                
                if [[ "$NAME" == *.apk ]]; then
                  SAVE_PATH="$YEAR_DIR/$NAME"
                  if [[ -f "$SAVE_PATH" ]]; then
                    echo "文件已存在，跳过: $NAME"
                  else
                    echo "Downloading $NAME ..."
                    curl -L --retry 5 --retry-delay 5 -o "$SAVE_PATH" "$URL"
                    TOTAL=$((TOTAL+1))
                  fi
                fi
              done
            done

            # 清理 Runner 临时缓存，避免磁盘满
            echo "清理 Runner 缓存..."
            rm -rf /home/runner/work/_temp/*
            rm -rf /home/runner/work/_actions/*
          done

          echo "✅ 下载完成，总计 APK: $TOTAL"

      # 4️⃣ 提交并推送 APK 到仓库
      - name: Commit and push APKs
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add releases/
          if ! git diff-index --quiet HEAD --; then
            git commit -m "chore: sync APK releases by year $(date +'%Y-%m-%d %H:%M')"
            git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD
          else
            echo "No new APKs to commit"
          fi
