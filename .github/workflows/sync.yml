name: Sync Release APKs by Year

on:
  schedule:
    - cron: '0 4 * * *'   # 每天 UTC 4 点自动运行
  workflow_dispatch:       # 支持手动触发

jobs:
  download-apks:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 检出仓库
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ 安装工具
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      # 3️⃣ 下载 Release APKs 按年份
      - name: Download release APKs by year
        env:
          REPO: kiwibrowser/src.next  # 替换为目标仓库
        run: |
          mkdir -p releases

          # 获取所有 Release
          response=$(curl -s "https://api.github.com/repos/$REPO/releases?per_page=100")
          
          # 获取所有年份
          years=$(echo "$response" | jq -r '.[].created_at' | cut -d'-' -f1 | sort -r | uniq)
          
          for year in $years; do
            echo "=== 下载年份 $year 的 Release ==="
            mkdir -p "releases/$year"
            
            echo "$response" | jq -r '.[] | @base64' | while read release; do
              _jq() { echo "$release" | base64 --decode | jq -r "$1"; }
              tag=$(_jq '.tag_name')
              created_at=$(_jq '.created_at' | cut -d'-' -f1)
              if [ "$created_at" != "$year" ]; then
                continue
              fi
              echo "Processing release $tag ($created_at)"

              assets_count=$(_jq '.assets | length')
              for i in $(seq 0 $((assets_count-1))); do
                name=$(_jq ".assets[$i].name")
                url=$(_jq ".assets[$i].browser_download_url")
                if [[ "$name" == *.apk ]]; then
                  save_path="releases/$year/$name"
                  if [ -f "$save_path" ]; then
                    echo "已存在，跳过 $name"
                    continue
                  fi
                  echo "Downloading $name ..."
                  curl -L -o "$save_path" "$url"
                fi
              done
            done

            # 清理日志/临时数据
            echo "清理临时日志..."
            rm -f *.log *.tmp 2>/dev/null
          done

      # 4️⃣ 提交并推送到仓库
      - name: Commit and push APKs
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add releases/
          if ! git diff-index --quiet HEAD --; then
            git commit -m "chore: sync APK releases $(date +'%Y-%m-%d %H:%M')"
            git push origin HEAD
          else
            echo "No new APKs"
