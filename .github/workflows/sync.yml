name: Sync Release APKs

on:
  schedule:
    - cron: '0 4 * * *'   # 每天 UTC 4 点自动运行
  workflow_dispatch:       # 支持手动触发

jobs:
  download-apks:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ 检出你的仓库
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ 安装依赖
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      # 3️⃣ 下载 APK
      - name: Download APKs by year
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO="kiwibrowser/src.next"
          START_YEAR=2025
          END_YEAR=2015   # 根据需要调整
          mkdir -p releases

          for YEAR in $(seq $START_YEAR -1 $END_YEAR); do
            echo "=== 下载年份 $YEAR 的 Release ==="
            mkdir -p "releases/$YEAR"
            page=1
            total_year=0

            while true; do
              response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                "https://api.github.com/repos/$REPO/releases?per_page=100&page=$page")

              # 没有更多 release 就退出
              if echo "$response" | jq -e 'length == 0' > /dev/null; then
                break
              fi

              # 遍历 release
              echo "$response" | jq -r '.[] | @base64' | while read release; do
                _jq() { echo "$release" | base64 -d | jq -r "$1"; }
                published=$(echo $(_jq '.published_at') | cut -d'-' -f1)

                if [ "$published" != "$YEAR" ]; then
                  continue
                fi

                tag=$(_jq '.tag_name')
                echo "Processing release $tag ($YEAR)"
                assets=$(_jq '.assets | length')

                for i in $(seq 0 $((assets-1))); do
                  name=$(echo "$release" | base64 -d | jq -r ".assets[$i].name")
                  url=$(echo "$release" | base64 -d | jq -r ".assets[$i].browser_download_url")
                  if [[ "$name" == *.apk ]]; then
                    echo "Downloading $name ..."
                    curl -L -o "releases/$YEAR/$name" "$url"
                    total_year=$((total_year+1))
                  fi
                done
              done

              page=$((page+1))
            done

            echo "✅ $YEAR 年下载完成，共下载 $total_year 个 APK"

            # 4️⃣ 分批 commit & push，避免一次 push 太大
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            files=$(ls releases/$YEAR/*.apk 2>/dev/null || true)
            batch=0
            for f in $files; do
              git add "$f"
              batch=$((batch+1))
              if [ $batch -ge 4 ]; then
                git commit -m "chore: add APKs $YEAR batch"
                git push https://${{ github.actor }}:$GITHUB_TOKEN@github.com/${{ github.repository }}.git HEAD
                batch=0
              fi
            done
            if [ $batch -gt 0 ]; then
              git commit -m "chore: add remaining APKs $YEAR"
              git push https://${{ github.actor }}:$GITHUB_TOKEN@github.com/${{ github.repository }}.git HEAD
            fi

            # 5️⃣ 清理临时日志
            echo "清理临时日志..."
            rm -f /home/runner/work/_temp/*.log || true

          done
