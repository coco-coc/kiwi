name: Sync Release APKs by Year

on:
  schedule:
    - cron: '0 4 * * *'   # 每天 UTC 4 点自动运行
  workflow_dispatch:       # 支持手动触发

jobs:
  download-apks:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ 检出仓库
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ 安装依赖
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      # 3️⃣ 下载 Release APK，按年份分类
      - name: Download APKs by year
        run: |
          REPO="kiwibrowser/src.next"
          BASE_DIR="releases"
          mkdir -p "$BASE_DIR"

          echo "Fetching releases from $REPO ..."
          PAGE=1
          TOTAL=0

          while true; do
            RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/$REPO/releases?per_page=100&page=$PAGE")

            if echo "$RESPONSE" | jq -e 'length == 0' > /dev/null; then
              break
            fi

            echo "$RESPONSE" | jq -r '.[] | @base64' | while read RELEASE; do
              _jq() { echo "$RELEASE" | base64 --decode | jq -r "$1"; }

              TAG=$(_jq '.tag_name')
              PUBLISHED_AT=$(_jq '.published_at')
              YEAR=$(date -d "$PUBLISHED_AT" +%Y)
              YEAR_DIR="$BASE_DIR/$YEAR"
              mkdir -p "$YEAR_DIR/$TAG"

              ASSETS=$(_jq '.assets | length')
              for I in $(seq 0 $((ASSETS-1))); do
                NAME=$(_jq ".assets[$I].name")
                URL=$(_jq ".assets[$I].browser_download_url")

                # 只下载 APK
                if [[ "$NAME" == *.apk ]]; then
                  SAVE_PATH="$YEAR_DIR/$TAG/$NAME"
                  if [[ -f "$SAVE_PATH" ]]; then
                    echo "APK exists, skipping: $YEAR/$TAG/$NAME"
                  else
                    echo "Downloading $YEAR/$TAG/$NAME ..."
                    for ATTEMPT in 1 2 3; do
                      if curl -sL -o "$SAVE_PATH" "$URL"; then
                        echo "✅ Downloaded $YEAR/$TAG/$NAME"
                        TOTAL=$((TOTAL+1))
                        break
                      else
                        echo "⚠️ Download failed, retry $ATTEMPT ..."
                        sleep $((ATTEMPT*2))
                      fi
                    done
                  fi
                fi
              done
            done

            PAGE=$((PAGE+1))
          done

          echo "✅ Total APKs downloaded: $TOTAL"

      # 4️⃣ 提交并推送 APK
      - name: Commit and push APKs
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add releases/
          if ! git diff-index --quiet HEAD --; then
            git commit -m "chore: sync APK releases by year $(date +'%Y-%m-%d %H:%M')"
            git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD
          else
            echo "No new APKs to commit"
          fi

      # 5️⃣ 清理 runner 临时文件
      - name: Clean up runner temp
        run: |
          echo "Cleaning runner temp files..."
          rm -rf /home/runner/work/_temp/*
          rm -rf /home/runner/work/_actions/*
          echo "Cleanup completed"
